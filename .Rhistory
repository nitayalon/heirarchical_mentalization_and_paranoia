labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('Game results')
belief_plot <- beliefs %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(`P(0.0)` = `X0.0`,
`P(0.1)` = `X0.1`,
`P(0.5)` = `X0.5`) %>%
ggplot() +
geom_line(aes(x = trial_number, y = `P(0.0)`, colour='`P(0.0)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.1)`, colour='`P(0.1)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.5)`, colour='`P(0.5)`',
linetype = factor(sender_dom_level)),
size=1.0) +
scale_linetype_manual(values=c("solid", "dotted", "solid"))+
scale_color_viridis_d(name = expression(paste('P(',eta, ')')))+
facet_grid(receiver_threshold~sender_threshold) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Posterior probability', x= 'Trial') +
ggtitle('Belief update')
q_value_plot <- q_values %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot, seed == sid,
# agent == "DoM(2)_receiver") %>%
agent == "DoM(0)_receiver") %>%
mutate(response = factor(action, labels = c('reject','accept'))) %>%
ggplot(aes(trial_number, q_value, colour = factor(sender_threshold))) +
geom_point(aes(shape = response), size=2.0) +
scale_shape_manual(values=c(4, 15)) +
scale_color_viridis_d(name = expression(paste('P(',gamma, ')')))+
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('DoM(0) receiver Q-values')
game_all = game_plot + belief_plot / q_value_plot
# ggsave(sprintf("../figures/simulation_illustration_sender_dom_level_%s_receiver_dom_level_%s.png", sender_dom_level_for_plot, receiver_dom_level_for_plot), width = 40, height = 20, units = "cm")
game_all
sid = 610
sender_dom_level_for_plot = -1
receiver_dom_level_for_plot = 0
game_plot <- game_results %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(sender_threshold = factor(sender_threshold),
response = factor(response, labels = c('reject','accept'))) %>%
# response = factor(response, labels = c('accept'))) %>%
mutate(sender_threshold = factor(sender_threshold)) %>%
ggplot(aes(x = trial_number, y = offer)) +
geom_point(aes(shape = factor(response)), size = 1.5) +
geom_line(aes(colour = sender_threshold), alpha=0.5, size = 1.5) +
scale_color_viridis_d(name = expression(paste('Sender threshold')))+
scale_shape_manual(values=c(4, 15)) +
# scale_shape_manual(values=c(15, 4)) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('Game results')
belief_plot <- beliefs %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(`P(0.0)` = `X0.0`,
`P(0.1)` = `X0.1`,
`P(0.5)` = `X0.5`) %>%
ggplot() +
geom_line(aes(x = trial_number, y = `P(0.0)`, colour='`P(0.0)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.1)`, colour='`P(0.1)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.5)`, colour='`P(0.5)`',
linetype = factor(sender_dom_level)),
size=1.0) +
scale_linetype_manual(values=c("solid", "dotted", "solid"))+
scale_color_viridis_d(name = expression(paste('P(',eta, ')')))+
facet_grid(receiver_threshold~sender_threshold) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Posterior probability', x= 'Trial') +
ggtitle('Belief update')
q_value_plot <- q_values %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot, seed == sid,
# agent == "DoM(2)_receiver") %>%
agent == "DoM(0)_receiver") %>%
mutate(response = factor(action, labels = c('reject','accept'))) %>%
ggplot(aes(trial_number, q_value, colour = factor(sender_threshold))) +
geom_point(aes(shape = response), size=2.0) +
scale_shape_manual(values=c(4, 15)) +
scale_color_viridis_d(name = expression(paste('P(',gamma, ')')))+
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('DoM(0) receiver Q-values')
game_all = game_plot + belief_plot / q_value_plot
# ggsave(sprintf("../figures/simulation_illustration_sender_dom_level_%s_receiver_dom_level_%s.png", sender_dom_level_for_plot, receiver_dom_level_for_plot), width = 40, height = 20, units = "cm")
game_all
results_path = "~/Max_Planck/Hierarchical-modelling/data/first_task/short_duration/"
dom_levels = list(
c("0","-1"),
c("0","1"),
c("2","1"))
agents_beliefs <- c("receiver_beliefs", "sender_beliefs")
directory_pattern <- "DoM%s_receiver_DoM%s_sender_softmax_temp_0.1"
path_to_game_results <- paste0(results_path, directory_pattern)
game_results <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "simulation_results" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
game_results <- rbind(game_results, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
results_path = "~/Max_Planck/Hierarchical-modelling/data/agent_subject/basic_task/softmax/DoM2_receiver_DoM-1_sender_softmax_temp_0.1_random_sender/"
receiver_dom_level = "2"
sender_dom_level = "-1"
path_to_dir <- paste(results_path, "simulation_results" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
temp
results_path = "~/Max_Planck/Hierarchical-modelling/data/first_task/short_duration/DoM2_receiver_DoM-1_sender_softmax_temp_0.1_random_sender/"
receiver_dom_level = "2"
sender_dom_level = "-1"
path_to_dir <- paste(results_path, "simulation_results" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
game_results <- rbind(game_results, cbind(interim_results, receiver_dom_level, sender_dom_level))
results_path = "~/Max_Planck/Hierarchical-modelling/data/first_task/short_duration/DoM2_receiver_DoM-1_sender_softmax_temp_0.1_rational_sender/"
receiver_dom_level = "2"
sender_dom_level = "-1"
path_to_dir <- paste(results_path, "simulation_results" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
game_results <- rbind(game_results, cbind(interim_results, receiver_dom_level, sender_dom_level))
beliefs <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
for(agent_name in agents_beliefs)
{
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "beliefs" ,sep="/")
updated_path = paste(path_to_dir, agent_name, sep="/")
temp = list.files(path=updated_path, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(updated_path, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
beliefs <- rbind(beliefs, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
}
q_values <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "q_values" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
issue_list <- sapply(myfiles, function(x){class(x$q_value)})
temp[issue_list == "character"][1]
myfiles[issue_list == "character"][1]
q_values <- rbind(q_values, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
sid = 610
sender_dom_level_for_plot = -1
receiver_dom_level_for_plot = 0
game_plot <- game_results %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(sender_threshold = factor(sender_threshold),
response = factor(response, labels = c('reject','accept'))) %>%
# response = factor(response, labels = c('accept'))) %>%
mutate(sender_threshold = factor(sender_threshold)) %>%
ggplot(aes(x = trial_number, y = offer)) +
geom_point(aes(shape = factor(response)), size = 1.5) +
geom_line(aes(colour = sender_threshold), alpha=0.5, size = 1.5) +
scale_color_viridis_d(name = expression(paste('Sender threshold')))+
scale_shape_manual(values=c(4, 15)) +
# scale_shape_manual(values=c(15, 4)) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('Game results')
belief_plot <- beliefs %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(`P(0.0)` = `X0.0`,
`P(0.1)` = `X0.1`,
`P(0.5)` = `X0.5`) %>%
ggplot() +
geom_line(aes(x = trial_number, y = `P(0.0)`, colour='`P(0.0)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.1)`, colour='`P(0.1)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.5)`, colour='`P(0.5)`',
linetype = factor(sender_dom_level)),
size=1.0) +
scale_linetype_manual(values=c("solid", "dotted", "solid"))+
scale_color_viridis_d(name = expression(paste('P(',eta, ')')))+
facet_grid(receiver_threshold~sender_threshold) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Posterior probability', x= 'Trial') +
ggtitle('Belief update')
q_value_plot <- q_values %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot, seed == sid,
# agent == "DoM(2)_receiver") %>%
agent == "DoM(0)_receiver") %>%
mutate(response = factor(action, labels = c('reject','accept'))) %>%
ggplot(aes(trial_number, q_value, colour = factor(sender_threshold))) +
geom_point(aes(shape = response), size=2.0) +
scale_shape_manual(values=c(4, 15)) +
scale_color_viridis_d(name = expression(paste('P(',gamma, ')')))+
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('DoM(0) receiver Q-values')
game_all = game_plot + belief_plot / q_value_plot
# ggsave(sprintf("../figures/simulation_illustration_sender_dom_level_%s_receiver_dom_level_%s.png", sender_dom_level_for_plot, receiver_dom_level_for_plot), width = 40, height = 20, units = "cm")
game_all
game_all
sid = 210
sender_dom_level_for_plot = -1
receiver_dom_level_for_plot = 0
game_plot <- game_results %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(sender_threshold = factor(sender_threshold),
response = factor(response, labels = c('reject','accept'))) %>%
# response = factor(response, labels = c('accept'))) %>%
mutate(sender_threshold = factor(sender_threshold)) %>%
ggplot(aes(x = trial_number, y = offer)) +
geom_point(aes(shape = factor(response)), size = 1.5) +
geom_line(aes(colour = sender_threshold), alpha=0.5, size = 1.5) +
scale_color_viridis_d(name = expression(paste('Sender threshold')))+
scale_shape_manual(values=c(4, 15)) +
# scale_shape_manual(values=c(15, 4)) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('Game results')
belief_plot <- beliefs %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(`P(0.0)` = `X0.0`,
`P(0.1)` = `X0.1`,
`P(0.5)` = `X0.5`) %>%
ggplot() +
geom_line(aes(x = trial_number, y = `P(0.0)`, colour='`P(0.0)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.1)`, colour='`P(0.1)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.5)`, colour='`P(0.5)`',
linetype = factor(sender_dom_level)),
size=1.0) +
scale_linetype_manual(values=c("solid", "dotted", "solid"))+
scale_color_viridis_d(name = expression(paste('P(',eta, ')')))+
facet_grid(receiver_threshold~sender_threshold) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Posterior probability', x= 'Trial') +
ggtitle('Belief update')
q_value_plot <- q_values %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot, seed == sid,
# agent == "DoM(2)_receiver") %>%
agent == "DoM(0)_receiver") %>%
mutate(response = factor(action, labels = c('reject','accept'))) %>%
ggplot(aes(trial_number, q_value, colour = factor(sender_threshold))) +
geom_point(aes(shape = response), size=2.0) +
scale_shape_manual(values=c(4, 15)) +
scale_color_viridis_d(name = expression(paste('P(',gamma, ')')))+
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('DoM(0) receiver Q-values')
game_all = game_plot + belief_plot / q_value_plot
# ggsave(sprintf("../figures/simulation_illustration_sender_dom_level_%s_receiver_dom_level_%s.png", sender_dom_level_for_plot, receiver_dom_level_for_plot), width = 40, height = 20, units = "cm")
game_all
game_results
game_all
game_results <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "simulation_results" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
game_results <- rbind(game_results, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
beliefs <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
for(agent_name in agents_beliefs)
{
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "beliefs" ,sep="/")
updated_path = paste(path_to_dir, agent_name, sep="/")
temp = list.files(path=updated_path, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(updated_path, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
beliefs <- rbind(beliefs, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
}
q_values <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "q_values" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
issue_list <- sapply(myfiles, function(x){class(x$q_value)})
temp[issue_list == "character"][1]
myfiles[issue_list == "character"][1]
q_values <- rbind(q_values, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
sid = 210
sender_dom_level_for_plot = -1
receiver_dom_level_for_plot = 0
game_plot <- game_results %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(sender_threshold = factor(sender_threshold),
response = factor(response, labels = c('reject','accept'))) %>%
# response = factor(response, labels = c('accept'))) %>%
mutate(sender_threshold = factor(sender_threshold)) %>%
ggplot(aes(x = trial_number, y = offer)) +
geom_point(aes(shape = factor(response)), size = 1.5) +
geom_line(aes(colour = sender_threshold), alpha=0.5, size = 1.5) +
scale_color_viridis_d(name = expression(paste('Sender threshold')))+
scale_shape_manual(values=c(4, 15)) +
# scale_shape_manual(values=c(15, 4)) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('Game results')
game_results
game_results %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(sender_threshold = factor(sender_threshold),
response = factor(response, labels = c('reject','accept')))
game_results
sender_dom_level_for_plot
game_results %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid)
game_results <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "simulation_results" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
game_results <- rbind(game_results, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
results_path = "~/Max_Planck/Hierarchical-modelling/data/first_task/short_duration/DoM2_receiver_DoM-1_sender_softmax_temp_0.1_rational_sender/"
receiver_dom_level = "2"
sender_dom_level = "-1"
path_to_dir <- paste(results_path, "simulation_results" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
game_results <- rbind(game_results, cbind(interim_results, receiver_dom_level, sender_dom_level))
beliefs <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
for(agent_name in agents_beliefs)
{
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "beliefs" ,sep="/")
updated_path = paste(path_to_dir, agent_name, sep="/")
temp = list.files(path=updated_path, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(updated_path, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
beliefs <- rbind(beliefs, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
}
q_values <- c()
for(dom_level in dom_levels)
{
receiver_dom_level = dom_level[1]
sender_dom_level = dom_level[2]
path_to_experiments_results <- sprintf(path_to_game_results, receiver_dom_level, sender_dom_level)
path_to_dir <- paste(path_to_experiments_results, "q_values" ,sep="/")
temp = list.files(path=path_to_dir, pattern="*.csv")
if (length(temp) == 0)
{
next
}
myfiles = lapply(paste(path_to_dir, temp, sep="/"), read.csv)
interim_results <- bind_rows(myfiles)
issue_list <- sapply(myfiles, function(x){class(x$q_value)})
temp[issue_list == "character"][1]
myfiles[issue_list == "character"][1]
q_values <- rbind(q_values, cbind(interim_results, receiver_dom_level, sender_dom_level))
}
sid = 210
sender_dom_level_for_plot = -1
receiver_dom_level_for_plot = 0
game_plot <- game_results %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(sender_threshold = factor(sender_threshold),
response = factor(response, labels = c('reject','accept'))) %>%
# response = factor(response, labels = c('accept'))) %>%
mutate(sender_threshold = factor(sender_threshold)) %>%
ggplot(aes(x = trial_number, y = offer)) +
geom_point(aes(shape = factor(response)), size = 1.5) +
geom_line(aes(colour = sender_threshold), alpha=0.5, size = 1.5) +
scale_color_viridis_d(name = expression(paste('Sender threshold')))+
scale_shape_manual(values=c(4, 15)) +
# scale_shape_manual(values=c(15, 4)) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('Game results')
belief_plot <- beliefs %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot,
seed == sid) %>%
mutate(`P(0.0)` = `X0.0`,
`P(0.1)` = `X0.1`,
`P(0.5)` = `X0.5`) %>%
ggplot() +
geom_line(aes(x = trial_number, y = `P(0.0)`, colour='`P(0.0)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.1)`, colour='`P(0.1)`',
linetype = factor(sender_dom_level)),
size=1.0) +
geom_line(aes(x = trial_number, y = `P(0.5)`, colour='`P(0.5)`',
linetype = factor(sender_dom_level)),
size=1.0) +
scale_linetype_manual(values=c("solid", "dotted", "solid"))+
scale_color_viridis_d(name = expression(paste('P(',eta, ')')))+
facet_grid(receiver_threshold~sender_threshold) +
scale_x_continuous(name="Trial", breaks=seq(0, 20, 1)) +
labs(y = 'Posterior probability', x= 'Trial') +
ggtitle('Belief update')
q_value_plot <- q_values %>%
filter(receiver_dom_level == receiver_dom_level_for_plot,
sender_dom_level == sender_dom_level_for_plot, seed == sid,
# agent == "DoM(2)_receiver") %>%
agent == "DoM(0)_receiver") %>%
mutate(response = factor(action, labels = c('reject','accept'))) %>%
ggplot(aes(trial_number, q_value, colour = factor(sender_threshold))) +
geom_point(aes(shape = response), size=2.0) +
scale_shape_manual(values=c(4, 15)) +
scale_color_viridis_d(name = expression(paste('P(',gamma, ')')))+
labs(y = 'Offer', x= 'Trial', shape = "Receiver's response") +
ggtitle('DoM(0) receiver Q-values')
game_all = game_plot + belief_plot / q_value_plot
# ggsave(sprintf("../figures/simulation_illustration_sender_dom_level_%s_receiver_dom_level_%s.png", sender_dom_level_for_plot, receiver_dom_level_for_plot), width = 40, height = 20, units = "cm")
game_all
